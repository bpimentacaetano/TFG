package DAO.api;


import DAO.OrgaoDAO;
import Model.Orgao;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.primefaces.json.JSONArray;
import org.primefaces.json.JSONException;
import org.primefaces.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author BÃ¡rbara
 */
@WebServlet(name = "Orgao", urlPatterns = {"/Orgao"})
public class OrgaoDAOapi extends HttpServlet {

    private static String readAll(Reader rd) throws IOException {
        StringBuilder sb = new StringBuilder();
        int cp;
        while ((cp = rd.read()) != -1) {
            sb.append((char) cp);
        }
        return sb.toString();
    }

    public static JSONObject readJsonFromUrl(String url) throws IOException,
            //                alerado de JSONArray para JSONObject
            JSONException {
        InputStream is = new URL(url).openStream();
        try {
            BufferedReader rd = new BufferedReader(new InputStreamReader(is,
                    Charset.forName("UTF-8")));
            String jsonText = readAll(rd);
            JSONObject json = new JSONObject(jsonText);
//			JSONArray json = new JSONArray(jsonText);
            return json;
        } finally {
            is.close();
        }
    }

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("application/json;charset=UTF-8");
        try {
            PrintWriter out = response.getWriter();
            int i, aux, x = 500;

            JSONObject json = readJsonFromUrl("http://compras.dados.gov.br/licitacoes/v1/orgaos.json");
            /* TODO output your page here. You may use following sample code. */
            aux = (int) Math.round(((double) Integer.parseInt(json.get("count").toString()) / 500) + 0.5d);

            JSONObject jsonEmbedded = (JSONObject) json.get("_embedded");
            out.println("[");
            out.println(jsonEmbedded.get("Orgaos"));
            out.println(",");

            for (i = 1; i < aux; i++) {
                JSONObject jsonAux = (JSONObject) readJsonFromUrl("http://compras.dados.gov.br/licitacoes/v1/orgaos.json?offset=" + x).get("_embedded");
                out.println(jsonAux.get("Orgaos"));
                x = x + 500;
            }

            
//            ---------
            JSONArray o = new JSONArray();
            o = jsonEmbedded.getJSONArray("Orgaos");

            
//            for (i = 0; i < o.length(); i++) {
                JSONObject jsonI = o.getJSONObject(0);
                System.out.println("testeCodigo: " + jsonI.get("codigo"));
                System.out.println("testeNome: " + jsonI.get("nome"));
//            }
                
                Orgao org = new Orgao();
                org.setCo_orgao(Integer.parseInt(jsonI.get("codigo").toString()));
                org.setNo_orgao(jsonI.get("nome").toString());
                
                OrgaoDAO od=new OrgaoDAO();
                od.save(org);
            
//            ---------

            out.println("]");

        } catch (JSONException ex) {
            Logger.getLogger(OrgaoDAOapi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
